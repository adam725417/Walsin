# coding: utf-8

"""
    WEX REST APIs

    Authentication methods - Basic Auth - JSON Web Token   - [POST /api/v1/usermgmt/login](#!/User/signinUser)   - [POST /api/v1/usermgmt/logout](#!/User/doLogout) - Python client sample [Download](/docs/wex-python-api.zip) 

    OpenAPI spec version: 12.0.2.417
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class ExportResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'file_size': 'float',
        'start_time': 'float',
        'end_time': 'float',
        'document_size': 'float',
        'facet_size': 'float',
        'cause': 'str',
        'file_resource_id': 'str'
    }

    attribute_map = {
        'file_size': 'fileSize',
        'start_time': 'startTime',
        'end_time': 'endTime',
        'document_size': 'documentSize',
        'facet_size': 'facetSize',
        'cause': 'cause',
        'file_resource_id': 'fileResourceId'
    }

    def __init__(self, file_size=None, start_time=None, end_time=None, document_size=None, facet_size=None, cause=None, file_resource_id=None):
        """
        ExportResponse - a model defined in Swagger
        """

        self._file_size = None
        self._start_time = None
        self._end_time = None
        self._document_size = None
        self._facet_size = None
        self._cause = None
        self._file_resource_id = None

        if file_size is not None:
          self.file_size = file_size
        if start_time is not None:
          self.start_time = start_time
        if end_time is not None:
          self.end_time = end_time
        if document_size is not None:
          self.document_size = document_size
        if facet_size is not None:
          self.facet_size = facet_size
        if cause is not None:
          self.cause = cause
        if file_resource_id is not None:
          self.file_resource_id = file_resource_id

    @property
    def file_size(self):
        """
        Gets the file_size of this ExportResponse.
        Size of the exported file

        :return: The file_size of this ExportResponse.
        :rtype: float
        """
        return self._file_size

    @file_size.setter
    def file_size(self, file_size):
        """
        Sets the file_size of this ExportResponse.
        Size of the exported file

        :param file_size: The file_size of this ExportResponse.
        :type: float
        """

        self._file_size = file_size

    @property
    def start_time(self):
        """
        Gets the start_time of this ExportResponse.
        Submitted time in epoch

        :return: The start_time of this ExportResponse.
        :rtype: float
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """
        Sets the start_time of this ExportResponse.
        Submitted time in epoch

        :param start_time: The start_time of this ExportResponse.
        :type: float
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """
        Gets the end_time of this ExportResponse.
        Submitted time in epoch

        :return: The end_time of this ExportResponse.
        :rtype: float
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """
        Sets the end_time of this ExportResponse.
        Submitted time in epoch

        :param end_time: The end_time of this ExportResponse.
        :type: float
        """

        self._end_time = end_time

    @property
    def document_size(self):
        """
        Gets the document_size of this ExportResponse.
        Number of documents exported

        :return: The document_size of this ExportResponse.
        :rtype: float
        """
        return self._document_size

    @document_size.setter
    def document_size(self, document_size):
        """
        Sets the document_size of this ExportResponse.
        Number of documents exported

        :param document_size: The document_size of this ExportResponse.
        :type: float
        """

        self._document_size = document_size

    @property
    def facet_size(self):
        """
        Gets the facet_size of this ExportResponse.
        (optional) Number of documents facets

        :return: The facet_size of this ExportResponse.
        :rtype: float
        """
        return self._facet_size

    @facet_size.setter
    def facet_size(self, facet_size):
        """
        Sets the facet_size of this ExportResponse.
        (optional) Number of documents facets

        :param facet_size: The facet_size of this ExportResponse.
        :type: float
        """

        self._facet_size = facet_size

    @property
    def cause(self):
        """
        Gets the cause of this ExportResponse.
        Exception message if failed unexpectedly

        :return: The cause of this ExportResponse.
        :rtype: str
        """
        return self._cause

    @cause.setter
    def cause(self, cause):
        """
        Sets the cause of this ExportResponse.
        Exception message if failed unexpectedly

        :param cause: The cause of this ExportResponse.
        :type: str
        """

        self._cause = cause

    @property
    def file_resource_id(self):
        """
        Gets the file_resource_id of this ExportResponse.
        File resource ID

        :return: The file_resource_id of this ExportResponse.
        :rtype: str
        """
        return self._file_resource_id

    @file_resource_id.setter
    def file_resource_id(self, file_resource_id):
        """
        Sets the file_resource_id of this ExportResponse.
        File resource ID

        :param file_resource_id: The file_resource_id of this ExportResponse.
        :type: str
        """

        self._file_resource_id = file_resource_id

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ExportResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
